/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

ZMK_CONDITIONAL_LAYER(1 2, 3)

ZMK_BEHAVIOR(bsp_del, mod_morph,
    bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

ZMK_BEHAVIOR(dot_cln, mod_morph,
    bindings = <&kp DOT>, <&kp COLON>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

ZMK_BEHAVIOR(com_scln, mod_morph,
    bindings = <&kp COMMA>, <&kp SEMI>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

ZMK_BEHAVIOR(mtl, hold_tap,
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    bindings = <&mo>, <&sl>;
)

ZMK_BEHAVIOR(ss_cw, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&sk RSHFT>, <&kp CAPS>;
)

ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

&lt { flavor = "tap-preferred"; };

&sk { 
    quick-release;
    ignore-modifiers;
};

&sl { 
    quick-release;
    ignore-modifiers;
};

/ {
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp TAB     &kp Q           &kp W           &kp E               &kp R             &kp T        &kp Y      &kp U              &kp I                &kp O            &kp P                       &kp TAB
&kp ESCAPE  &hml LEFT_ALT A &hml LEFT_GUI S &hml LEFT_CONTROL D &hml LEFT_SHIFT F &kp G        &kp H      &hmr RIGHT_SHIFT J &hmr RIGHT_CONTROL K &hmr RIGHT_GUI L &hmr RIGHT_ALT SINGLE_QUOTE &trans
&trans      &kp Z           &kp X           &kp C               &kp V             &kp B        &kp N      &kp M              &com_scln            &dot_cln         &kp FSLH                    &trans
                                            &bsp_del            &mtl 2 2          &ss_cw       &kp SPACE  &mtl 1 1           &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|LGUI/CAPS |  *  |  7 |  8  |  9  |  +  |    |  !  |  @  |  #  |  $  |  %  | RGUI/F1 |
            //|CTRL/MENU |  /  |  4 |  5  |  6  |  -  |    |  ^  |  &  |  *  |  (  |  )  | CTRL/F2 |
            //|  LALT/=  |  0  |  1 |  2  |  3  |  .  |    |  ls |  F4 |  F5 |  F6 |  F7 | RALT/F3 |
            //                      | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&kp GRAVE       &kp NUMBER_1     &kp NUMBER_2      &kp NUMBER_3    &kp NUMBER_4          &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7           &kp NUMBER_8     &kp N9             &kp NUMBER_0      &kp BSLH
&kp UNDERSCORE  &kp LESS_THAN    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp MINUS       &kp EQUAL     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp PLUS
&kp TILDE       &kp EXCLAMATION  &kp AT_SIGN       &kp HASH        &kp DOLLAR            &kp PERCENT     &kp CARET     &kp AMPERSAND          &kp STAR         &trans             &trans            &kp PIPE
                                                   &trans          &trans                &trans          &trans        &trans                 &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| LGUI |  VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU | RGUI |
            //| CTRL |  VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | CTRL | 
            //| LALT |  MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6    &kp F7          &kp F8        &kp F9           &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans   &bootloader
                          &trans  &trans  &trans    &trans    &trans          &trans
            >;
        };
    };
};
